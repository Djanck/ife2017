!function(e,t){if("function"==typeof define&&define.amd)define(["exports","./Observer.js"],t);else if("undefined"!=typeof exports)t(exports,require("./Observer.js"));else{var n={exports:{}};t(n.exports,e.Observer),e.Cat=n.exports}}(this,function(e,t){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0});var i=n(t),o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=/\{\{((?:.|\n)+?)\}\}/g,s=function(){function e(t){var n=t.template,o=t.el,a=void 0===o?null:o,u=t.data,s=void 0===u?{}:u,f=t.watch,c=void 0===f?{}:f;t.methods;r(this,e),this.$template=n,this.$el=a,this.$watcher=this.__initWatcher(c),this.__observer__=new i["default"](s,this.$watcher),this.$data=this.__observer__,this.__render()}return a(e,[{key:"__initWatcher",value:function(e){var t={};for(var n in e)t[n]?t[n].push(this.__bindContext(e[n])):t[n]=[this.__bindContext(e[n])];return t}},{key:"$watch",value:function(e,t){this.$watcher[e]?this.$watcher[e].push(this.__bindContext(t)):this.$watcher[e]=[this.__bindContext(t)]}},{key:"__bindWatch",value:function(e){for(var t in e)e[t]=this.__bindContext(e[t]);return e}},{key:"__bindContext",value:function(e){if("function"==typeof e)return e.bind(this)}},{key:"__render",value:function(){this.$el.innerHTML=this.__parseTemplate()}},{key:"__parseTemplate",value:function(){var e=this.$data;return this.$template.replace(u,function(){for(var t=arguments.length,n=Array(t),r=0;r<t;r++)n[r]=arguments[r];var i=n[1].trim().replace(/\[(\d+)\]/g,".$1"),a=i.split(".");if(1===a.length)return e[i];for(var u=e,s=0;"object"===("undefined"==typeof u?"undefined":o(u));)u=u[a[s]],s++;return u})}}]),e}();e["default"]=s});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZ1ZS9DYXQuanMiXSwibmFtZXMiOlsiZ2xvYmFsIiwiZmFjdG9yeSIsImRlZmluZSIsImFtZCIsImV4cG9ydHMiLCJyZXF1aXJlIiwibW9kIiwiT2JzZXJ2ZXIiLCJDYXQiLCJ0aGlzIiwiX09ic2VydmVyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJfT2JzZXJ2ZXIyIiwiX3R5cGVvZiIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJpIiwibGVuZ3RoIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsImtleSIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIlJFIiwiX3JlZiIsInRlbXBsYXRlIiwiX3JlZiRlbCIsImVsIiwidW5kZWZpbmVkIiwiX3JlZiRkYXRhIiwiZGF0YSIsIl9yZWYkd2F0Y2giLCJ3YXRjaCIsIm1ldGhvZHMiLCIkdGVtcGxhdGUiLCIkZWwiLCIkd2F0Y2hlciIsIl9faW5pdFdhdGNoZXIiLCJfX29ic2VydmVyX18iLCIkZGF0YSIsIl9fcmVuZGVyIiwicHVzaCIsIl9fYmluZENvbnRleHQiLCJmbiIsImJpbmQiLCJpbm5lckhUTUwiLCJfX3BhcnNlVGVtcGxhdGUiLCJyZXBsYWNlIiwiX2xlbiIsImFyZ3VtZW50cyIsImFyZyIsIkFycmF5IiwiX2tleSIsInRyaW0iLCJrZXlBcnIiLCJzcGxpdCIsInJlc3VsdCJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBV0EsRUFBUUMsR0FDbEIsR0FBc0Isa0JBQVhDLFNBQXlCQSxPQUFPQyxJQUMxQ0Qs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TUFBTyxXQXBFUlosS0FBSzRDLElBQUlVLFVBQVl0RCxLQUFLdUQscUJBd0V6QjFCLElBQUssa0JBQ0xqQixNQUFPLFdBdEVSLEdBQUkyQixHQUFPdkMsS0FBS2dELEtBQ2hCLE9BQU9oRCxNQUFLMkMsVUFBVWEsUUFBUXhCLEVBQUksV0FBWSxJQUFBLEdBQUF5QixHQUFBQyxVQUFBbEMsT0FBUm1DLEVBQVFDLE1BQUFILEdBQUFJLEVBQUEsRUFBQUEsRUFBQUosRUFBQUksSUFBUkYsRUFBUUUsR0FBQUgsVUFBQUcsRUFDN0MsSUFBSWhDLEdBQU04QixFQUFJLEdBQUdHLE9BQU9OLFFBQVEsYUFBYyxPQUMxQ08sRUFBU2xDLEVBQUltQyxNQUFNLElBQ3ZCLElBQXNCLElBQWxCRCxFQUFPdkMsT0FDVixNQUFPZSxHQUFLVixFQUliLEtBRkEsR0FBSW9DLEdBQVMxQixFQUNUaEIsRUFBSSxFQUNpQixZQUFsQixtQkFBTzBDLEdBQVAsWUFBQW5ELEVBQU9tRCxLQUNiQSxFQUFTQSxFQUFPRixFQUFPeEMsSUFDdkJBLEdBRUQsT0FBTzBDLFNBZ0ZEbEUsSUFHUkosR0FBQUEsV0FuSm9CSSIsImZpbGUiOiJ2dWUvQ2F0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE9ic2VydmVyIGZyb20gJy4vT2JzZXJ2ZXIuanMnXHJcblxyXG4vKiAg5Yy56YWN5Y+M5aSn5ous5Y+35YaF55qE5YaF5a65ICAqL1xyXG5jb25zdCBSRSA9IC9cXHtcXHsoKD86LnxcXG4pKz8pXFx9XFx9L2dcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhdCB7XHJcblx0Y29uc3RydWN0b3Ioe1xyXG5cdFx0dGVtcGxhdGUsXHJcblx0XHRlbCA9IG51bGwsXHJcblx0XHRkYXRhID0ge30sXHJcblx0XHR3YXRjaCA9IHt9LFxyXG5cdFx0bWV0aG9kcyA9IHt9XHJcblx0fSkge1xyXG5cdFx0dGhpcy4kdGVtcGxhdGUgPSB0ZW1wbGF0ZVxyXG5cdFx0dGhpcy4kZWwgPSBlbFxyXG5cdFx0dGhpcy4kd2F0Y2hlciA9IHRoaXMuX19pbml0V2F0Y2hlcih3YXRjaClcclxuXHRcdHRoaXMuX19vYnNlcnZlcl9fID0gbmV3IE9ic2VydmVyKGRhdGEsIHRoaXMuJHdhdGNoZXIpXHJcblx0XHR0aGlzLiRkYXRhID0gdGhpcy5fX29ic2VydmVyX19cclxuXHRcdHRoaXMuX19yZW5kZXIoKVxyXG5cdH1cclxuXHRfX2luaXRXYXRjaGVyKHdhdGNoKSB7XHJcblx0XHRsZXQgb2JqID0ge31cclxuXHRcdGZvciAobGV0IGtleSBpbiB3YXRjaCkge1xyXG5cdFx0XHRpZiAob2JqW2tleV0pIHtcclxuXHRcdFx0XHRvYmpba2V5XS5wdXNoKHRoaXMuX19iaW5kQ29udGV4dCh3YXRjaFtrZXldKSlcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRvYmpba2V5XSA9IFt0aGlzLl9fYmluZENvbnRleHQod2F0Y2hba2V5XSldXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiBvYmpcclxuXHR9XHJcblx0JHdhdGNoKGtleSwgZm4pIHtcclxuXHRcdGlmICh0aGlzLiR3YXRjaGVyW2tleV0pIHtcclxuXHRcdFx0dGhpcy4kd2F0Y2hlcltrZXldLnB1c2godGhpcy5fX2JpbmRDb250ZXh0KGZuKSlcclxuXHRcdH1cclxuXHRcdGVsc2Uge1xyXG5cdFx0XHR0aGlzLiR3YXRjaGVyW2tleV0gPSBbdGhpcy5fX2JpbmRDb250ZXh0KGZuKV1cclxuXHRcdH1cclxuXHR9XHJcblx0X19iaW5kV2F0Y2god2F0Y2gpIHtcclxuXHRcdGZvciAobGV0IGtleSBpbiB3YXRjaCkge1xyXG5cdFx0XHR3YXRjaFtrZXldID0gdGhpcy5fX2JpbmRDb250ZXh0KHdhdGNoW2tleV0pXHJcblx0XHR9XHJcblx0XHRyZXR1cm4gd2F0Y2hcclxuXHR9XHJcblx0X19iaW5kQ29udGV4dChmbikge1xyXG5cdFx0aWYgKHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJylcclxuXHRcdFx0cmV0dXJuXHJcblx0XHRcclxuXHRcdHJldHVybiBmbi5iaW5kKHRoaXMpXHJcblx0fVxyXG5cdF9fcmVuZGVyKCkge1xyXG5cdFx0dGhpcy4kZWwuaW5uZXJIVE1MID0gdGhpcy5fX3BhcnNlVGVtcGxhdGUoKVxyXG5cdH1cclxuXHRfX3BhcnNlVGVtcGxhdGUoKSB7XHJcblx0XHRsZXQgZGF0YSA9IHRoaXMuJGRhdGFcclxuXHRcdHJldHVybiB0aGlzLiR0ZW1wbGF0ZS5yZXBsYWNlKFJFLCAoLi4uYXJnKSA9PiB7XHJcblx0XHRcdGxldCBrZXkgPSBhcmdbMV0udHJpbSgpLnJlcGxhY2UoL1xcWyhcXGQrKVxcXS9nLCAnLiQxJylcclxuXHRcdFx0bGV0IGtleUFyciA9IGtleS5zcGxpdCgnLicpXHJcblx0XHRcdGlmIChrZXlBcnIubGVuZ3RoID09PSAxKSB7XHJcblx0XHRcdFx0cmV0dXJuIGRhdGFba2V5XVxyXG5cdFx0XHR9XHJcblx0XHRcdGxldCByZXN1bHQgPSBkYXRhXHJcblx0XHRcdGxldCBpID0gMFxyXG5cdFx0XHR3aGlsZSAodHlwZW9mIHJlc3VsdCA9PT0gJ29iamVjdCcpIHtcclxuXHRcdFx0XHRyZXN1bHQgPSByZXN1bHRba2V5QXJyW2ldXVxyXG5cdFx0XHRcdGkrK1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiByZXN1bHRcclxuXHRcdH0pXHJcblx0fVxyXG59Il19
