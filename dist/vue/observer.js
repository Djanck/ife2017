!function(e,t){if("function"==typeof define&&define.amd)define(["exports"],t);else if("undefined"!=typeof exports)t(exports);else{var r={exports:{}};t(r.exports),e.Observer=r.exports}}(this,function(e){"use strict";function t(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function n(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(e,"__esModule",{value:!0});var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),u=["push","pop","shift","unshift","splice","sort","reverse"],c=function(e,t,r){e.hasOwnProperty(t)||Object.defineProperty(e,t,{value:r,enumerable:!1,configurable:!1})},a=function(e){function t(){for(var e,o=arguments.length,i=Array(o),f=0;f<o;f++)i[f]=arguments[f];r(this,t);var a=n(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(i)));return u.forEach(function(e){c(a,e,function(){var t=Array.prototype[e].apply(this,arguments);return t})}),a}return o(t,e),t}(Array),p=function(){function e(t,n){r(this,e),this.watcher=n,this.walk(t)}return f(e,[{key:"walk",value:function(r){var n=void 0;for(var o in r)r.hasOwnProperty(o)&&(n=r[o],Array.isArray(n)?n=new(Function.prototype.bind.apply(a,[null].concat(t(n)))):"object"===("undefined"==typeof n?"undefined":i(n))&&(n=new e(n)),this.convert(o,n))}},{key:"convert",value:function(e,t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,get:function(){return t},set:function(r){r===t||r!==r&&t!==t||(this.watcher&&this.watcher[e]&&this.watcher[e].forEach(function(e){return e(r)}),t=r)}})}}]),e}();e["default"]=p});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZ1ZS9PYnNlcnZlci5qcyJdLCJuYW1lcyI6WyJnbG9iYWwiLCJmYWN0b3J5IiwiZGVmaW5lIiwiYW1kIiwiZXhwb3J0cyIsIm1vZCIsIk9ic2VydmVyIiwidGhpcyIsIl90b0NvbnN1bWFibGVBcnJheSIsImFyciIsIkFycmF5IiwiaXNBcnJheSIsImkiLCJhcnIyIiwibGVuZ3RoIiwiZnJvbSIsIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJjYWxsIiwiUmVmZXJlbmNlRXJyb3IiLCJfaW5oZXJpdHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInZhbHVlIiwiZW51bWVyYWJsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJkZWZpbmVQcm9wZXJ0eSIsIl90eXBlb2YiLCJTeW1ib2wiLCJpdGVyYXRvciIsIm9iaiIsIl9jcmVhdGVDbGFzcyIsImRlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImRlc2NyaXB0b3IiLCJrZXkiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJtZXRob2RzIiwiZGVmUHJvdG90eXBlIiwibWV0aG9kIiwidiIsImhhc093blByb3BlcnR5IiwiQXJyYXlQcm94eSIsIl9BcnJheSIsIl9yZWYiLCJfbGVuIiwiYXJndW1lbnRzIiwiYXJncyIsIl9rZXkiLCJfdGhpcyIsImdldFByb3RvdHlwZU9mIiwiYXBwbHkiLCJjb25jYXQiLCJmb3JFYWNoIiwicmVzdWx0IiwiZGF0YSIsIndhdGNoZXIiLCJ3YWxrIiwidmFsIiwiY29udmVydCIsImdldCIsInNldCIsIm5ld1ZhbCIsImZuIl0sIm1hcHBpbmdzIjoiQ0FBQSxTQUFXQSxFQUFRQyxHQUNsQixHQUFzQixr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TXpELEtBQU1vRCxVQUNqRCxPQUFPUSxPQUxXTCxFQTRHcEIsTUF0QkF0QyxHQUFVK0IsRUFBWUMsR0FzQmZELEdBN0dnQjdDLE9BZUpKLEVBaUdMLFdBaEdmLFFBQUFBLEdBQWE4RCxFQUFNQyxHQUFTckQsRUFBQVQsS0FBQUQsR0FDM0JDLEtBQUs4RCxRQUFVQSxFQUNmOUQsS0FBSytELEtBQUtGLEdBZ0pWLE1BMUNBMUIsR0FBYXBDLElBQ1p5QyxJQUFLLE9BQ0xoQixNQUFPLFNBdEdIVSxHQUNMLEdBQUk4QixHQUFBQSxNQUNKLEtBQUssR0FBSXhCLEtBQU9OLEdBQ1hBLEVBQUlhLGVBQWVQLEtBQ3RCd0IsRUFBTTlCLEVBQUlNLEdBRU5yQyxNQUFNQyxRQUFRNEQsR0FDakJBLEVBQUFBLElBQUFBLFNBQUFBLFVBQUFBLEtBQUFBLE1BQVVoQixHQUFWLE1BQUFVLE9BQUF6RCxFQUF3QitELE1BRUQsWUFBZixtQkFBT0EsR0FBUCxZQUFBakMsRUFBT2lDLE1BQ2ZBLEVBQU0sR0FBSWpFLEdBQVNpRSxJQUdwQmhFLEtBQUtpRSxRQUFRekIsRUFBS3dCLE9BMEduQnhCLElBQUssVUFDTGhCLE1BQU8sU0F2R0FnQixFQUFLaEIsR0FDYkgsT0FBT1MsZUFBZTlCLEtBQU13QyxHQUMzQmYsWUFBWSxFQUNaRSxjQUFjLEVBQ2R1QyxJQUFLLFdBQ0osTUFBTzFDLElBRVIyQyxJQUFLLFNBQXdCQyxHQUN4QkEsSUFBVzVDLEdBQVU0QyxJQUFXQSxHQUFVNUMsSUFBVUEsSUFHcER4QixLQUFLOEQsU0FBVzlELEtBQUs4RCxRQUFRdEIsSUFDaEN4QyxLQUFLOEQsUUFBUXRCLEdBQUttQixRQUFRLFNBQUNVLEdBQUQsTUFBUUEsR0FBR0QsS0FFdEM1QyxFQUFRNEMsVUErR0hyRSxJQUdSRixHQUFBQSxXQXRKb0JFIiwiZmlsZSI6InZ1ZS9PYnNlcnZlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qICDmlbDnu4Tnm5HlkKznmoTmlrnms5UgICovXHJcbmNvbnN0IG1ldGhvZHMgPSBbJ3B1c2gnLCAncG9wJywgJ3NoaWZ0JywgJ3Vuc2hpZnQnLCAnc3BsaWNlJywgJ3NvcnQnLCAncmV2ZXJzZSddXHJcblxyXG4vKiAg5Li65a+56LGh5re75Yqg5bGe5oCnICAqL1xyXG5jb25zdCBkZWZQcm90b3R5cGUgPSAob2JqLCBtZXRob2QsIHYpID0+IHtcclxuXHRpZiAob2JqLmhhc093blByb3BlcnR5KG1ldGhvZCkpIHJldHVyblxyXG5cclxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBtZXRob2QsIHtcclxuXHRcdHZhbHVlOiB2LFxyXG5cdFx0ZW51bWVyYWJsZTogZmFsc2UsXHJcblx0XHRjb25maWd1cmFibGU6IGZhbHNlXHJcblx0fSlcclxufVxyXG5cclxuLyogIOaVsOe7hOS7o+eQhuWvueixoSAgKi9cclxuY2xhc3MgQXJyYXlQcm94eSBleHRlbmRzIEFycmF5IHtcclxuXHRjb25zdHJ1Y3RvciguLi5hcmdzKSB7XHJcblx0XHRzdXBlciguLi5hcmdzKVxyXG5cdFx0bWV0aG9kcy5mb3JFYWNoKChtZXRob2QpID0+IHtcclxuXHRcdFx0ZGVmUHJvdG90eXBlKHRoaXMsIG1ldGhvZCwgZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0bGV0IHJlc3VsdCA9IEFycmF5LnByb3RvdHlwZVttZXRob2RdLmFwcGx5KHRoaXMsIGFyZ3VtZW50cylcclxuXHRcdFx0XHRyZXR1cm4gcmVzdWx0XHJcblx0XHRcdH0pXHJcblx0XHR9KVxyXG5cdH1cclxufVxyXG5cclxuLyoqXHJcbiAqIE9ic2VydmVyXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPYnNlcnZlciB7XHJcblx0Y29uc3RydWN0b3IgKGRhdGEsIHdhdGNoZXIpIHtcclxuXHRcdHRoaXMud2F0Y2hlciA9IHdhdGNoZXJcclxuXHRcdHRoaXMud2FsayhkYXRhKVxyXG5cdH1cclxuXHR3YWxrIChvYmopIHtcclxuXHRcdGxldCB2YWxcclxuXHRcdGZvciAobGV0IGtleSBpbiBvYmopIHtcclxuXHRcdFx0aWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcblx0XHRcdFx0dmFsID0gb2JqW2tleV1cclxuXHJcblx0XHRcdFx0aWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xyXG5cdFx0XHRcdFx0dmFsID0gbmV3IEFycmF5UHJveHkoLi4udmFsKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNlIGlmICh0eXBlb2YgdmFsID09PSAnb2JqZWN0Jykge1xyXG5cdFx0XHRcdFx0dmFsID0gbmV3IE9ic2VydmVyKHZhbClcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHRoaXMuY29udmVydChrZXksIHZhbClcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHRjb252ZXJ0IChrZXksIHZhbHVlKSB7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywga2V5LCB7XHJcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXHJcblx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuXHRcdFx0Z2V0OiBmdW5jdGlvbiByZWFjdGl2ZUdldHRlcigpIHtcclxuXHRcdFx0XHRyZXR1cm4gdmFsdWVcclxuXHRcdFx0fSxcclxuXHRcdFx0c2V0OiBmdW5jdGlvbiByZWFjdGl2ZVNldHRlcihuZXdWYWwpIHtcclxuXHRcdFx0XHRpZiAobmV3VmFsID09PSB2YWx1ZSB8fCAobmV3VmFsICE9PSBuZXdWYWwgJiYgdmFsdWUgIT09IHZhbHVlKSkge1xyXG5cdFx0XHRcdFx0cmV0dXJuXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmICh0aGlzLndhdGNoZXIgJiYgdGhpcy53YXRjaGVyW2tleV0pIHtcclxuXHRcdFx0XHRcdHRoaXMud2F0Y2hlcltrZXldLmZvckVhY2goKGZuKSA9PiBmbihuZXdWYWwpKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR2YWx1ZSA9IG5ld1ZhbFxyXG5cdFx0XHR9XHJcblx0XHR9KVxyXG5cdH1cclxufVxyXG4iXX0=
